<?php

namespace ContainerB5HZDPj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Authenticator_MainService extends App_KernelProdContainer
{
    /*
     * Gets the private 'security.firewall.authenticator.main' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['App\\Security\\LoginAuthAuthenticator'] ?? $container->load('getLoginAuthAuthenticatorService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $b = ($container->privates['security.event_dispatcher.main'] ?? $container->getSecurity_EventDispatcher_MainService());

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }

        return $container->privates['security.firewall.authenticator.main'] = new \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener(new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([0 => $a], ($container->privates['security.token_storage'] ?? $container->getSecurity_TokenStorageService()), $b, 'main', ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()), true, true, []));
    }
}
